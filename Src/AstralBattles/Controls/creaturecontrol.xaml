<UserControl
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:Converters="clr-namespace:AstralBattles.Converters"
             xmlns:Controls="clr-namespace:AstralBattles.Controls" xmlns:ec="clr-namespace:Microsoft.Expression.Interactivity.Core;assembly=Microsoft.Expression.Interactions"
    xmlns:toolkit="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit"
    x:Class="AstralBattles.Controls.CreatureControl"
    mc:Ignorable="d"
    FontSize="22" Foreground="White"
    Loaded="MainControlLoaded"
    d:DesignHeight="90" d:DesignWidth="90" x:Name="mainControl"
    d:DataConLabel="{d:DesignInstance IsDesignTimeCreatable=True, Type=Controls:CreatureControl}">
    <UserControl.Resources>
        <Converters:LevelConverter x:Key="levelConverter"/>
        <Converters:NullToHiddenConverter x:Key="nullToHiddenConverter" />
        <Converters:CardImageConverter x:Key="cardImageConverter" />
        <Converters:TrueToVisibleConverter x:Key="trueToVisibleConverter" />
        <Converters:FalseToVisibleConverter x:Key="falseToVisibleConverter" />
        
    </UserControl.Resources>
    
	<UserControl.FontFamily>
		<StaticResource ResourceKey="PhoneFontFamilyNormal"/>
	</UserControl.FontFamily>

    <Grid x:Name="grid" DataConLabel="{Binding ElementName=mainControl}" d:DataConLabel="{d:DesignInstance IsDesignTimeCreatable=True, Type=Controls:CreatureControl}">
    	<Grid.Projection>
    		<PlaneProjection/>
    	</Grid.Projection>
        <Grid.Background>
            <ImageBrush ImageSource="/AstralBattles;component/Resources/Backgrounds/titanium-texture.jpg" Stretch="Uniform" />  
        </Grid.Background>
        
				
		<VisualStateManager.VisualStateGroups>
			<VisualStateGroup x:Name="VisualStateGroup">
				<VisualStateGroup.Transitions>
					<VisualTransition GeneratedDuration="0:0:1" To="DieState">
						<Storyboard x:Name="dieStateStoryboard">
							<DoubleAnimation Duration="0:0:1.2" To="-1500" Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.LocalOffsetZ)" Storyboard.TargetName="LayoutRoot"/>
							<DoubleAnimation Duration="0:0:1.2" To="-180" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.Rotation)" Storyboard.TargetName="LayoutRoot">
								<DoubleAnimation.EasingFunction>
									<BounceEase EasingMode="EaseOut"/>
								</DoubleAnimation.EasingFunction>
							</DoubleAnimation>
							<DoubleAnimation Duration="0:0:1.2" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="LayoutRoot" d:IsOptimized="True"/>
						</Storyboard>
					</VisualTransition>
					<VisualTransition GeneratedDuration="0:0:1" To="AttackBottomState">
						<VisualTransition.GeneratedEasingFunction>
							<BackEase EasingMode="EaseOut" Amplitude="0"/>
						</VisualTransition.GeneratedEasingFunction>
						<Storyboard x:Name="attackBottomStateStoryboard">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="LayoutRoot">
								<EasingDoubleKeyFrame KeyTime="0" Value="0">
									<EasingDoubleKeyFrame.EasingFunction>
										<CubicEase EasingMode="EaseOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
								<EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="30"/>
								<EasingDoubleKeyFrame KeyTime="0:0:1" Value="0">
									<EasingDoubleKeyFrame.EasingFunction>
										<BackEase EasingMode="EaseInOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualTransition>
					<VisualTransition GeneratedDuration="0:0:1" To="AttackTopState">
						<VisualTransition.GeneratedEasingFunction>
							<BackEase EasingMode="EaseOut" Amplitude="0"/>
						</VisualTransition.GeneratedEasingFunction>
						<Storyboard x:Name="attackTopStateStoryboard">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="LayoutRoot">
								<EasingDoubleKeyFrame KeyTime="0" Value="0">
									<EasingDoubleKeyFrame.EasingFunction>
										<CubicEase EasingMode="EaseOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
								<EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="-30"/>
								<EasingDoubleKeyFrame KeyTime="0:0:1" Value="0">
									<EasingDoubleKeyFrame.EasingFunction>
										<BackEase EasingMode="EaseInOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualTransition>
					<VisualTransition GeneratedDuration="0:0:1" To="GotDamageState">
						<Storyboard x:Name="gotDamageStateStoryboard">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border">
								<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0.445">
									<EasingDoubleKeyFrame.EasingFunction>
										<BackEase EasingMode="EaseOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
								<EasingDoubleKeyFrame KeyTime="0:0:0.7" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textBlock">
								<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.7" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="textBlock">
								<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.7" Value="-45"/>
							</DoubleAnimationUsingKeyFrames>
							<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
								<EasingColorKeyFrame KeyTime="0" Value="#FFF30E03"/>
								<EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FEFB0300"/>
								<EasingColorKeyFrame KeyTime="0:0:0.7" Value="Red"/>
							</ColorAnimationUsingKeyFrames>
						</Storyboard>
					</VisualTransition>
					<VisualTransition GeneratedDuration="0:0:1" To="GotHealthState">
						<Storyboard x:Name="gotHealthStateStoryboard">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border">
								<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0.445">
									<EasingDoubleKeyFrame.EasingFunction>
										<BackEase EasingMode="EaseOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
								<EasingDoubleKeyFrame KeyTime="0:0:0.7" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textBlock">
								<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.7" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="textBlock">
								<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.7" Value="-45"/>
							</DoubleAnimationUsingKeyFrames>
							<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
								<EasingColorKeyFrame KeyTime="0" Value="#FF5AFF00"/>
								<EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FE37FE00"/>
								<EasingColorKeyFrame KeyTime="0:0:0.7" Value="#FF2BFF00"/>
							</ColorAnimationUsingKeyFrames>
						</Storyboard>
					</VisualTransition>
					<VisualTransition GeneratedDuration="0:0:0.5" To="SkipTurnState">
						<VisualTransition.GeneratedEasingFunction>
							<BackEase EasingMode="EaseOut"/>
						</VisualTransition.GeneratedEasingFunction>
                        <Storyboard x:Name="skipTurnStateStoryboard">
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="clocksBorder">
								<EasingColorKeyFrame KeyTime="0" Value="#FFCECECE"/>
								<EasingColorKeyFrame KeyTime="0:0:0.685" Value="#FF787878"/>
								<EasingColorKeyFrame KeyTime="0:0:0.789" Value="#FFCECECE"/>
							</ColorAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="clocksBorder">
								<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.456" Value="0.785">
									<EasingDoubleKeyFrame.EasingFunction>
										<CircleEase EasingMode="EaseOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
								<EasingDoubleKeyFrame KeyTime="0:0:0.789" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
                            <DoubleAnimation Duration="0:0:0.789" To="180" Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.RotationZ)" Storyboard.TargetName="image1" d:IsOptimized="True"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="clocksBorder">
                            	<DiscreteObjectKeyFrame KeyTime="0">
                            		<DiscreteObjectKeyFrame.Value>
                            			<Visibility>Visible</Visibility>
                            		</DiscreteObjectKeyFrame.Value>
                            	</DiscreteObjectKeyFrame>
                            	<DiscreteObjectKeyFrame KeyTime="0:0:0.456">
                            		<DiscreteObjectKeyFrame.Value>
                            			<Visibility>Visible</Visibility>
                            		</DiscreteObjectKeyFrame.Value>
                            	</DiscreteObjectKeyFrame>
                            	<DiscreteObjectKeyFrame KeyTime="0:0:0.81">
                            		<DiscreteObjectKeyFrame.Value>
                            			<Visibility>Collapsed</Visibility>
                            		</DiscreteObjectKeyFrame.Value>
                            	</DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
					</VisualTransition>
					<VisualTransition GeneratedDuration="0:0:1" To="CreationState">
						<Storyboard x:Name="creationStateStoryboard">
							<DoubleAnimation Duration="0:0:1" From="90" To="0" Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.RotationX)" Storyboard.TargetName="LayoutRoot">
								<DoubleAnimation.EasingFunction>
									<BounceEase EasingMode="EaseOut"/>
								</DoubleAnimation.EasingFunction>
							</DoubleAnimation>
						</Storyboard>
					</VisualTransition>
					<VisualTransition GeneratedDuration="0" To="ActState">
                        <Storyboard x:Name="doActStoryboard">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.GlobalOffsetZ)" Storyboard.TargetName="grid">
								<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.571" Value="90">
									<EasingDoubleKeyFrame.EasingFunction>
										<QuinticEase EasingMode="EaseIn"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
								<EasingDoubleKeyFrame KeyTime="0:0:1" Value="0">
									<EasingDoubleKeyFrame.EasingFunction>
										<CircleEase EasingMode="EaseOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualTransition>
				</VisualStateGroup.Transitions>
				<VisualState x:Name="DefaultState"/>
				<VisualState x:Name="DieState">
					<!--<Storyboard>
						<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.LocalOffsetZ)" Storyboard.TargetName="LayoutRoot" d:IsOptimized="True"/>
						<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.Rotation)" Storyboard.TargetName="LayoutRoot" d:IsOptimized="True"/>
						<ColorAnimation Duration="0" To="#FFFF0017" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock1" d:IsOptimized="True"/>
					</Storyboard>-->
				</VisualState>
				<VisualState x:Name="GotHealthState" />
				<VisualState x:Name="SelectedState">
					<Storyboard>
						<DoubleAnimation Duration="0" To="-163" Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.LocalOffsetZ)" Storyboard.TargetName="image" d:IsOptimized="True"/>
						<ColorAnimation Duration="0" To="#FFE0E234" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="LayoutRoot" d:IsOptimized="True"/>
					</Storyboard>
				</VisualState>
				<VisualState x:Name="CreationState">
					<Storyboard>
						<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.RotationX)" Storyboard.TargetName="LayoutRoot" d:IsOptimized="True"/>
					</Storyboard>
				</VisualState>
				<VisualState x:Name="AttackBottomState"/>
				<VisualState x:Name="AttackTopState"/>
				<VisualState x:Name="GotDamageState"/>
				<VisualState x:Name="SkipTurnState"/>
                <VisualState x:Name="BaseState"/>
                <VisualState x:Name="ActState"/>
			</VisualStateGroup>
		</VisualStateManager.VisualStateGroups>
		
		<TextBlock Label="{Binding FieldName}" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="#58000000" FontWeight="Bold" FontSize="29.333"/>
		
        <Rectangle x:Name="waitSelectRectangle" Stroke ="#FFABABAB" StrokeThickness="10" 
                   StrokeDashArray="0.5,2"
                   Visibility="{Binding Field.IsWaitingForSelect, Converter={StaticResource trueToVisibleConverter}}" Margin="-3" StrokeDashCap="Square">
            <Rectangle.Triggers>
                <EventTrigger RoutedEvent="Rectangle.Loaded">
                    <EventTrigger.Actions >
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation 
                                     Storyboard.TargetName="waitSelectRectangle"
                                     Storyboard.TargetProperty="StrokeDashOffset"
                                     To="20" Duration="0:0:5"
                                     RepeatBehavior="Forever" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>
            </Rectangle.Triggers>
        </Rectangle>
        <Rectangle x:Name="rootRectangle" Stroke ="Gold" StrokeThickness ="3" 
                   StrokeDashArray="0.5,2" StrokeDashCap="Square"
                   Visibility="{Binding Field.IsSelected, Converter={StaticResource trueToVisibleConverter}}">
            <Rectangle.Triggers>
                <EventTrigger RoutedEvent="Rectangle.Loaded">
                    <EventTrigger.Actions >
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation 
                                     Storyboard.TargetName="rootRectangle"
                                     Storyboard.TargetProperty="StrokeDashOffset"
                                     To="20" Duration="0:0:5"
                                     RepeatBehavior="Forever" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>
            </Rectangle.Triggers>
        </Rectangle>

        <Grid x:Name="LayoutRoot" Margin="3" Background="#FFD4D61A" Visibility="{Binding Field.IsEmpty, Converter={StaticResource falseToVisibleConverter}}" RenderTransformOrigin="0.5,0.5" d:IsHidden="True">
			<Grid.RenderTransform>
				<CompositeTransform/>
			</Grid.RenderTransform>
			<Grid.Projection>
				<PlaneProjection/>
			</Grid.Projection>
			<VisualStateManager.CustomVisualStateManager>
				<ec:ExtendedVisualStateManager/>
			</VisualStateManager.CustomVisualStateManager>
            <Image x:Name="image" Source="{Binding Field.Card, Converter={StaticResource cardImageConverter}}" d:IsHidden="True">
				<Image.Projection>
					<PlaneProjection/>
				</Image.Projection>
			</Image>
            <Border x:Name="border" Background="Red" Opacity="0">
                <toolkit:GestureService.GestureListener>
                    <toolkit:GestureListener Tap="GestureListenerTap"/>
                </toolkit:GestureService.GestureListener>
            </Border>
                <TextBlock x:Name="textBlock" Opacity="0" HorizontalAlignment="Center" 
				VerticalAlignment="Center" FontSize="50" FontWeight="Bold" 
				Label="{Binding OverlayText}" RenderTransformOrigin="0.5,0.5">
				<TextBlock.Projection>
					<PlaneProjection/>
				</TextBlock.Projection>
				<TextBlock.RenderTransform>
					<CompositeTransform/>
				</TextBlock.RenderTransform>
			</TextBlock>
                
                
			<!--<Border HorizontalAlignment="Left" VerticalAlignment="Bottom" Background="#7F000000" CornerRadius="0,8,0,0" >
				<TextBlock Label="{Binding Field.Card.Damage}" Height="30" Width="21" Margin="1,-3,3,-2" />
			</Border>-->
                
            <Border HorizontalAlignment="Left" VerticalAlignment="Bottom" 
				CornerRadius="0,8,0,0" Background="#7E000000" Margin="0,0,0,0" >
                <TextBlock x:Name="textBlock3" Foreground="White"  
					Label="{Binding Field.Card.Damage}" TextAlignment="Center" Height="30" Width="25"
					Margin="1,-5,1,-2" />
            </Border>


            <Border HorizontalAlignment="Right" VerticalAlignment="Bottom" 
				CornerRadius="8,0,0,0" Background="#7E000000" Margin="0,0,0,0" >
				<TextBlock x:Name="textBlock1" Foreground="LightGreen"  
					Label="{Binding Field.Card.Health}" TextAlignment="Center" Height="30" Width="25"
					Margin="1,-5,1,-2" />
            </Border>
                
            <Border HorizontalAlignment="Left" VerticalAlignment="Top" 
				CornerRadius="0,0,8,0" Background="#7E000000" Margin="0,0,0,0" >
                <TextBlock x:Name="textBlock2" Foreground="Gold"  
					Label="{Binding Field.Card.Cost}" TextAlignment="Center" Height="30" Width="25"
					Margin="1,-5,1,-2" />
            </Border>

            <Border x:Name="clocksBorder" Background="Transparent" Visibility="Collapsed">
                <Image x:Name="image1" Source="/AstralBattles;component/Resources/Icons/skipturn.png" Width="70" >
                	<Image.Projection>
                		<PlaneProjection/>
                	</Image.Projection>
                </Image>
            </Border>
            </Grid>
	</Grid>
</UserControl>
