<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CurrentTournamentWillBeOverwritten" xml:space="preserve">
    <value>Current tournament will be overwritten.</value>
  </data>
  <data name="ContinueCampaignTip" xml:space="preserve">
    <value>Continue started campaign</value>
  </data>
  <data name="TwoPlayersTip" xml:space="preserve">
    <value>Two players mode</value>
  </data>
  <data name="LoadGame" xml:space="preserve">
    <value>Load the last hosted game</value>
  </data>
  <data name="ReviewGame" xml:space="preserve">
    <value>Review game</value>
  </data>
  <data name="NextGame" xml:space="preserve">
    <value>Next game</value>
  </data>
  <data name="NextTurn" xml:space="preserve">
    <value>Next turn</value>
  </data>
  <data name="Congratulations" xml:space="preserve">
    <value>Congratulations, you have finished the Tournament on the {0} place. Thanks for playing and wait for Astral Battles 2 with campaign and online multiplayer!</value>
  </data>
  <data name="ConfigureDeck" xml:space="preserve">
    <value>Configure deck</value>
  </data>
  <data name="TapToChange" xml:space="preserve">
    <value>Tap to change</value>
  </data>
  <data name="TwoPlayers" xml:space="preserve">
    <value>Two players</value>
  </data>
  <data name="HasCasted" xml:space="preserve">
    <value>{0} has casted a {1} spell</value>
  </data>
  <data name="TutorialTip" xml:space="preserve">
    <value>View a short tutorial</value>
  </data>
  <data name="Vibration" xml:space="preserve">
    <value>Vibration</value>
  </data>
  <data name="Spec_Elementalist" xml:space="preserve">
    <value>Elementalist</value>
  </data>
  <data name="Normal" xml:space="preserve">
    <value>Normal</value>
  </data>
  <data name="Sorcery" xml:space="preserve">
    <value>Sorcery</value>
  </data>
  <data name="Player2NameLabel" xml:space="preserve">
    <value>Player 2 name:</value>
  </data>
  <data name="Spec_Pyromancer" xml:space="preserve">
    <value>Pyromancer</value>
  </data>
  <data name="HasWon" xml:space="preserve">
    <value>{0} has won!</value>
  </data>
  <data name="ContinueTournamentTip" xml:space="preserve">
    <value>Continue last played tournament game</value>
  </data>
  <data name="Goblins" xml:space="preserve">
    <value>Goblins</value>
  </data>
  <data name="ViaSockets" xml:space="preserve">
    <value>Network mode</value>
  </data>
  <data name="NewGameTip" xml:space="preserve">
    <value>Start new game for 2 players</value>
  </data>
  <data name="FaceSelection" xml:space="preserve">
    <value>Face selection</value>
  </data>
  <data name="NamesShouldBeNotEmptyMessage" xml:space="preserve">
    <value>Names shouldn't be empty</value>
  </data>
  <data name="NamesShouldBeNotEqualMessage" xml:space="preserve">
    <value>Names should be unique</value>
  </data>
  <data name="Difficulty" xml:space="preserve">
    <value>Tournament difficulty</value>
  </data>
  <data name="Spec_StormbringerTip" xml:space="preserve">
    <value>Player recieves +2 bonus to his air element power and starts with Griffin creature. Additional cards: Titan, Phoenix</value>
  </data>
  <data name="Campaign" xml:space="preserve">
    <value>Campaign</value>
  </data>
  <data name="CampaignTip" xml:space="preserve">
    <value>Campaign mode</value>
  </data>
  <data name="CreatureShortDesc" xml:space="preserve">
    <value>{0} creature, attack: {1}, Health: {2}, cost: {3}.</value>
  </data>
  <data name="Resort" xml:space="preserve">
    <value>Resort</value>
  </data>
  <data name="FifthElement" xml:space="preserve">
    <value>5th element:</value>
  </data>
  <data name="NewGame" xml:space="preserve">
    <value>New game</value>
  </data>
  <data name="Sounds" xml:space="preserve">
    <value>Sounds</value>
  </data>
  <data name="IsComputer" xml:space="preserve">
    <value>Is computer (A.I.)</value>
  </data>
  <data name="OnOneDevice" xml:space="preserve">
    <value>Hot seat mode</value>
  </data>
  <data name="NewCampaignTip" xml:space="preserve">
    <value>Start new campaign</value>
  </data>
  <data name="HasSkipped" xml:space="preserve">
    <value>{0} has skipped his turn</value>
  </data>
  <data name="JoinToServerTip" xml:space="preserve">
    <value>Join to server by IP</value>
  </data>
  <data name="RoundStarted" xml:space="preserve">
    <value>Round {0} has been started</value>
  </data>
  <data name="SpellShortDesc2" xml:space="preserve">
    <value>Spell. Cost: {0}</value>
  </data>
  <data name="Tutorial" xml:space="preserve">
    <value>Tutorial</value>
  </data>
  <data name="Control" xml:space="preserve">
    <value>Control</value>
  </data>
  <data name="Casting" xml:space="preserve">
    <value>{0} is casting {1}</value>
  </data>
  <data name="Confirmation" xml:space="preserve">
    <value>Confirmation</value>
  </data>
  <data name="Spec_Stormbringer" xml:space="preserve">
    <value>Stormbringer</value>
  </data>
  <data name="Tournament" xml:space="preserve">
    <value>Tournament</value>
  </data>
  <data name="Spec_Druid" xml:space="preserve">
    <value>Druid</value>
  </data>
  <data name="HasSummoned" xml:space="preserve">
    <value>{0} has summoned a {1}</value>
  </data>
  <data name="Demonic" xml:space="preserve">
    <value>Demonics</value>
  </data>
  <data name="PlayersName" xml:space="preserve">
    <value>Player's name:</value>
  </data>
  <data name="Specialization" xml:space="preserve">
    <value>Specialization:</value>
  </data>
  <data name="MainMenu" xml:space="preserve">
    <value>game</value>
  </data>
  <data name="NewTournamentTip" xml:space="preserve">
    <value>Start the new tournament</value>
  </data>
  <data name="JoinToServer" xml:space="preserve">
    <value>Join to server</value>
  </data>
  <data name="Spec_ElementalistTip" xml:space="preserve">
    <value>Player recieves +1 bonus to Fire, Water, Air, Earth and Death</value>
  </data>
  <data name="Spec_Necromancer" xml:space="preserve">
    <value>Necromancer</value>
  </data>
  <data name="Ok" xml:space="preserve">
    <value>Ok</value>
  </data>
  <data name="TournamentTip" xml:space="preserve">
    <value>Tournament mode</value>
  </data>
  <data name="SpellShortDesc" xml:space="preserve">
    <value>{0} spell, cost: {1}.</value>
  </data>
  <data name="AboutBody" xml:space="preserve">
    <value>This game is a mobile version of the famous desktop game Spectromancer. All cards' texts are copyright (c) Three Donkeys LLC. You may also contact me via jabber at main@conference.jabber.uruchie.org</value>
  </data>
  <data name="HelpImproveLanguages" xml:space="preserve">
    <value>* German and French are coming soon</value>
  </data>
  <data name="HostAServer" xml:space="preserve">
    <value>Host a server</value>
  </data>
  <data name="Air" xml:space="preserve">
    <value>Air</value>
  </data>
  <data name="Tap" xml:space="preserve">
    <value>Tap</value>
  </data>
  <data name="You" xml:space="preserve">
    <value>you</value>
  </data>
  <data name="Earth" xml:space="preserve">
    <value>Earth</value>
  </data>
  <data name="About" xml:space="preserve">
    <value>about</value>
  </data>
  <data name="Death" xml:space="preserve">
    <value>Death</value>
  </data>
  <data name="Beast" xml:space="preserve">
    <value>Beasts</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="Chaos" xml:space="preserve">
    <value>Chaos</value>
  </data>
  <data name="Water" xml:space="preserve">
    <value>Water</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>TOURNAMENT STATISTICS</value>
  </data>
  <data name="Total" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="Feedback" xml:space="preserve">
    <value>Send feedback</value>
  </data>
  <data name="ToContinue" xml:space="preserve">
    <value> to continue...</value>
  </data>
  <data name="NewTournament" xml:space="preserve">
    <value>New tournament</value>
  </data>
  <data name="Continue" xml:space="preserve">
    <value>Continue</value>
  </data>
  <data name="Mechanical" xml:space="preserve">
    <value>Mechanics</value>
  </data>
  <data name="ContinueTip" xml:space="preserve">
    <value>Continue the current game</value>
  </data>
  <data name="Spec_IceLord" xml:space="preserve">
    <value>Ice lord</value>
  </data>
  <data name="CreatureShortDesc2" xml:space="preserve">
    <value>Attack: {0}, Health: {1}, Cost: {2}.</value>
  </data>
  <data name="Spec_DruidTip" xml:space="preserve">
    <value>Player recieves +2 bonus to his earth element power and gains +1 health each round. Additional cards: Master healer, Stone rain</value>
  </data>
  <data name="Spec_IceLordTip" xml:space="preserve">
    <value>Player recieves +2 bonus to his water element power and deals 1 damage to random opponent's creature every turn. Additional cards: Astral guard, Merfolk overloard</value>
  </data>
  <data name="Spec_NecromancerTip" xml:space="preserve">
    <value>Player gains +4 health points when creatures die. Additional cards: Vampire, Drain souls</value>
  </data>
  <data name="Spec_PyromancerTip" xml:space="preserve">
    <value>Player recieves +2 bonus to his fire element power and all opponent's creatures gain 2 damage when summoning. Additional cards: Armageddon, Dragon</value>
  </data>
  <data name="YourDeck" xml:space="preserve">
    <value>Your deck:</value>
  </data>
  <data name="Options" xml:space="preserve">
    <value>options</value>
  </data>
  <data name="OnOneDeviceTip" xml:space="preserve">
    <value>Play a duel on the single device</value>
  </data>
  <data name="Player1NameLabel" xml:space="preserve">
    <value>Player 1 name:</value>
  </data>
  <data name="Copyrights" xml:space="preserve">
    <value>Copyright (c) 2011 Egor Bogatov</value>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>Loading...</value>
  </data>
  <data name="TournamentDescription" xml:space="preserve">
    <value>In tournament you should defeat 8 opponents in series to take the first place</value>
  </data>
  <data name="LoadGameTip" xml:space="preserve">
    <value>Load the last hosted game as a server</value>
  </data>
  <data name="HostAServerTip" xml:space="preserve">
    <value>Host a server for playing duel</value>
  </data>
  <data name="NextTurnMessage" xml:space="preserve">
    <value>{0}, it's your turn!</value>
  </data>
  <data name="GameWillBeOverwritten" xml:space="preserve">
    <value>Last played game will be overwritten.</value>
  </data>
  <data name="ViaSocketsTip" xml:space="preserve">
    <value>Play a duel through the network (p2p)</value>
  </data>
  <data name="NewCampaign" xml:space="preserve">
    <value>New campaign</value>
  </data>
  <data name="Easy" xml:space="preserve">
    <value>Easy</value>
  </data>
  <data name="Fire" xml:space="preserve">
    <value>Fire</value>
  </data>
  <data name="Game" xml:space="preserve">
    <value>Game</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name:</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="Holy" xml:space="preserve">
    <value>Holy</value>
  </data>
  <data name="Hard" xml:space="preserve">
    <value>Hard</value>
  </data>
  <data name="Slot" xml:space="preserve">
    <value>Slot</value>
  </data>
  <data name="Illusion" xml:space="preserve">
    <value>Illusion</value>
  </data>
  <data name="Summoning" xml:space="preserve">
    <value>{0} is summoning {1}</value>
  </data>
</root>